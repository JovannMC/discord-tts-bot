{
  "name": "Discord Text-to-Speech Bot",
  "description": "A small Discord bot that sends Text-to-Speech messages in various languages.",
  "repository": "https://github.com/JovannMC/discord-tts-bot",
  "logo": "https://i.imgur.com/jYh0jOT.png",
  "buildpacks": [
    {
      "url": "heroku/nodejs"
    },
    {
      "url": "https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest.git"
    }
  ],
  "env": {
    "DISCORD_TOKEN": {
      "description": "Your bot's bot token.",
      "required": true
    },
    "DISCORD_OWNER_ID": {
      "description": "Your bot's owner's ID.",
      "value": "123123123",
      "required": false
    },
    "DISCORD_OWNER_REPORTING": {
      "description": "Whether the bot should send errors to the owner.",
      "value": "false",
      "required": false
    },
    "DISCORD_PRESENCE_REFRESH_INTERVAL": {
      "description": "The interval it takes for the bot to refresh its presence (in ms).",
      "value": "900000",
      "required": false
    },
    "DISCORD_DEFAULT_DISCONNECT_TIMEOUT": {
      "description": "The default time the bot waits before leaving a channel when inactive (in minutes). Can be set between 5 and 300.",
      "value": "5",
      "required": false
    },
    "DISCORD_PROVIDER_TYPE": {
      "description": "The type of data provider to use. In heroku, you should set this to redis.",
      "value": "redis",
      "required": false
    },
    "DISCORD_REDIS_URL": {
      "description": "The URL of the redis service to be used by this bot. In heroku, you need to have this set.",
      "value": "redis://ip:port",
      "required": true
    },
    "DISCORD_ENABLE_TTS_CHANNELS": {
      "description": "Whether to enable the message-only based TTS to send TTS messages on a certain channel with a certain setting without the need to execute a command.",
      "value": "false",
      "required": false
    },
    "DISCORD_ENABLE_KEEP_ALIVE": {
      "description": "Whether an HTTP server should be started. You should only use this option if you're planning to host the bot on something like Repl.it or Heroku. Additionally, you should use something like UptimeRobot to poll the associated address to keep the bot alive. If you need to specify the port to use you should set the `PORT` environment variable (Heroku uses this by default).",
      "value": "true",
      "required": false
    },
    "DISCORD_ENABLE_WHO_SAID": {
      "description": "Whether the bot should prepend each TTS message with a 'User said...'. This makes it so the bot speaks the name of the author of every message.",
      "value": "false",
      "required": false
    }
  }
}
